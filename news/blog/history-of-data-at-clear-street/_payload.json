[{"data":1,"prerenderedAt":720},["ShallowReactive",2],{"RH0UXTtouu":3},{"pageSetup":4,"sections":15},{"image":5,"title":9,"slug":10,"description":13,"keywords":14},{"url":6,"width":7,"height":8},"https://cdn.sanity.io/images/40fnhjbe/production/5b85e1f42ebeeab482a3bdd6f675bf58bf0926c9-3840x2160.png",3840,2160,"History of Data at Clear Street",{"_type":11,"current":12},"slug","history-of-data-at-clear-street","Clear Street is a cloud-native financial technology firm on a mission to modernize the brokerage ecosystem.",null,{"header":16,"content":39,"footer":631},{"date":17,"summary":13,"author":18,"category":35,"title":9,"hello":38},"2024-08-06",{"_rev":19,"_type":20,"_updatedAt":21,"slug":22,"photo":24,"_createdAt":21,"role":32,"name":33,"_id":34},"M6C3MD30UV1QnIuPhVwDmt","authors","2024-08-06T19:20:59Z",{"current":23,"_type":11},"adisun-wheelock",{"width":25,"height":26,"extension":27,"alt":14,"hotspot":14,"asset":28,"url":31},495,440,"png",{"_ref":29,"_type":30},"image-a9c0dadef46acbba2468fc83bee183d0bb134585-495x440-png","reference","https://cdn.sanity.io/images/40fnhjbe/production/a9c0dadef46acbba2468fc83bee183d0bb134585-495x440.png","Software Engineer","Adisun Wheelock","35e3d77c-5a68-44fa-af30-03ebb7f9f0b8",{"name":36,"colorSlug":37},"Engineering","engineering","world",{"body":40,"references":14,"pressReleasesFootNote":534,"legalText":562,"form":601,"type":629,"readingTime":630},[41,52,62,70,78,86,94,102,110,118,126,134,142,152,160,168,176,184,192,200,208,224,231,239,246,254,262,269,277,285,293,301,309,317,325,332,340,348,356,364,372,380,387,395,403,411,419,435,443,459,471,483,491,498,506,527],{"markDefs":42,"children":43,"_type":49,"style":50,"_key":51},[],[44],{"marks":45,"text":46,"_key":47,"_type":48},[],"Clear Street’s data journey has undergone multiple iterations since our founding in 2018. Software Engineer Adisun Wheelock takes a deep dive into how our data platform has evolved as we’ve grown from a US equities platform to adding fixed income, securities lending, execution, margin financing, repo and more.","5617498314140","span","block","normal","663c86d0871a",{"markDefs":53,"children":54,"_type":49,"style":60,"_key":61},[],[55],{"text":56,"_key":57,"_type":48,"marks":58},"Initial Architecture ","5a2ac1602b4f",[59],"strong","h5","8ce76e2f928c",{"markDefs":63,"children":64,"_type":49,"style":50,"_key":69},[],[65],{"_key":66,"_type":48,"marks":67,"text":68},"2ad8f26c42a70",[],"In its early days, Clear Street’s data platform components primarily leveraged Postgres, AWS S3, Kubernetes, and Kafka. Our backend microservices were typically written in Go (and still are) and kept state via Postgres. Our reporting jobs were written in Python due to the plethora of data-related libraries that Python has to offer. End-of-day (EOD) reconciliation reports, which ensure our books and records align with a vendor's, are quite common. A typical reconciliation workflow from that time might have looked like this:","0b1fa14f9359",{"extension":27,"_key":71,"height":72,"width":73,"alt":14,"hotspot":14,"children":14,"url":74,"_type":75,"asset":76},"0fe6c77048f7",616,759,"https://cdn.sanity.io/images/40fnhjbe/production/bff15310a180dde5b583a2d3d50722dc02ff2e3d-759x616.png","figureNews",{"_ref":77,"_type":30},"image-bff15310a180dde5b583a2d3d50722dc02ff2e3d-759x616-png",{"style":50,"_key":79,"markDefs":80,"children":81,"_type":49},"6f75eb470c86",[],[82],{"marks":83,"text":84,"_key":85,"_type":48},[],"We deployed Python jobs as a Kubernetes StatefulSet, and these jobs would commonly listen to a Kafka topic that would produce EOD events. This EOD event is emitted when our system rolls over to the next business day and our T-1 data is considered immutable. When the EOD event was polled by the job, the following workflow logic would begin:","42890d67a0620",{"markDefs":87,"children":88,"_type":49,"style":50,"_key":93},[],[89],{"_type":48,"marks":90,"text":91,"_key":92},[],"\n1. Fetch vendor report from S3 – read as Pandas dataframe","9967a4bded36","e31a645e9409",{"children":95,"_type":49,"style":50,"_key":100,"markDefs":101},[96],{"_type":48,"marks":97,"text":98,"_key":99},[],"2. Make HTTP requests to backend microservice – read as Pandas dataframe","7052a7bcc842","6a7f13093e6f",[],{"_type":49,"style":50,"_key":103,"markDefs":104,"children":105},"8bf85e3e8812",[],[106],{"_type":48,"marks":107,"text":108,"_key":109},[],"3. Join the two dataframes on a common key","c571e97054d3",{"children":111,"_type":49,"style":50,"_key":116,"markDefs":117},[112],{"_type":48,"marks":113,"text":114,"_key":115},[],"4. Output the “matches” and “mismatches” report to S3 and/or Slack","7078a78dc3ac","ee61973d9ac7",[],{"markDefs":119,"children":120,"_type":49,"style":50,"_key":125},[],[121],{"_key":122,"_type":48,"marks":123,"text":124},"8351100e1841",[],"5. Commit the Kafka message","af86086abb01",{"_key":127,"markDefs":128,"children":129,"_type":49,"style":50},"f2d4e9774cc0",[],[130],{"_type":48,"marks":131,"text":132,"_key":133},[59],"Limitations ","1523422f1840",{"_key":135,"markDefs":136,"children":137,"_type":49,"style":50},"59a8c1ca6093",[],[138],{"_type":48,"marks":139,"text":140,"_key":141},[],"Moving quickly was extremely important to us, and this strategy allowed us to do just that. We created internal tooling for this process which made it simple to deploy new reporting jobs. However, there were some clear downsides to this methodology, mainly:","428d509e544a0",{"_type":49,"style":50,"_key":143,"listItem":144,"markDefs":145,"children":146,"level":151},"f81d1c46b180","bullet",[],[147],{"_key":148,"_type":48,"marks":149,"text":150},"b7d1a86ba9660",[],"Reports were typically generated once a day. Because these jobs were deployed as a Kubernetes StatefulSet, they would run 24/7 in our cluster, resulting in unnecessary resource allocation.",1,{"_key":153,"listItem":144,"markDefs":154,"children":155,"level":151,"_type":49,"style":50},"73c6fbd5cc01",[],[156],{"_type":48,"marks":157,"text":158,"_key":159},[],"Scraping backend APIs can take a while, especially when pagination is involved.","61b06cdb6e3b0",{"_key":161,"listItem":144,"markDefs":162,"children":163,"level":151,"_type":49,"style":50},"370dbe1899b1",[],[164],{"_type":48,"marks":165,"text":166,"_key":167},[],"Kubernetes pods sometimes experienced out-of-memory issues due to data volume.","0f099c6b4b290",{"style":50,"_key":169,"listItem":144,"markDefs":170,"children":171,"level":151,"_type":49},"786960bf1dac",[],[172],{"_type":48,"marks":173,"text":174,"_key":175},[],"Report dependency was difficult. If one report required the completion of another report, we didn’t have a robust method of defining this dependency graph.","ed7c298532080",{"listItem":144,"markDefs":177,"children":178,"level":151,"_type":49,"style":50,"_key":183},[],[179],{"_type":48,"marks":180,"text":181,"_key":182},[],"Our backend microservices were serving many similar API requests, which caused database and compute usage contention with our transactional systems.","8974eb1edb730","40e0ac0e2f64",{"style":60,"_key":185,"markDefs":186,"children":187,"_type":49},"79ed1e576ac9",[],[188],{"marks":189,"text":190,"_key":191,"_type":48},[59],"Phase Two","cabd2fd86962",{"children":193,"_type":49,"style":50,"_key":198,"markDefs":199},[194],{"_type":48,"marks":195,"text":196,"_key":197},[],"We knew the initial architecture of our data platform would have scaling issues as data volume increased, but again, we were prioritizing feature development with a small engineering team. As we onboarded more clients and data volumes grew, we eventually reached an inflection point where we knew we needed to introduce a data warehouse into our tech stack. At the time, our two front runners were Redshift and Snowflake. Ultimately, Snowflake won due to its light learning curve, SaaS architecture, and overall rich feature support.","9d73757c48d60","9cd2f39cd56f",[],{"markDefs":201,"children":202,"_type":49,"style":50,"_key":207},[],[203],{"text":204,"_key":205,"_type":48,"marks":206},"Our goal was to transition our reporting jobs to Snowflake, so we first needed to develop data pipelines that loaded backend microservice data as well as S3 file data into Snowflake. All of our backend microservices produced messages to Kafka via Debezium or some other implementation of the Transactional Outbox Pattern. That is to say, our microservice data is generally replicated to Kafka topics.","4e7d2c6cb7d60",[],"473a8de37fb7",{"markDefs":209,"children":210,"_type":49,"style":50,"_key":223},[],[211,215,219],{"_type":48,"marks":212,"text":213,"_key":214},[],"The data we needed to load to Snowflake was mainly sourced from Kafka and S3. AWS offers the ability to produce a SQS queue whenever S3 is modified, allowing us to create event-driven extract, transform, and load ","1e5afdd326050",{"_type":48,"marks":216,"text":217,"_key":218},[59],"(ETL) ","1e5afdd326051",{"_type":48,"marks":220,"text":221,"_key":222},[],"pipelines.","1e5afdd326052","619359eb8dd4",{"asset":225,"children":14,"alt":14,"_key":227,"hotspot":14,"url":228,"width":229,"height":230,"extension":27,"_type":75},{"_ref":226,"_type":30},"image-bef0052fa5e7ebf20ea4aeded5c7f5f6cc3786b3-888x264-png","1f8494550a0e","https://cdn.sanity.io/images/40fnhjbe/production/bef0052fa5e7ebf20ea4aeded5c7f5f6cc3786b3-888x264.png",888,264,{"_type":49,"style":50,"_key":232,"markDefs":233,"children":234},"c16eac20c993",[],[235],{"_type":48,"marks":236,"text":237,"_key":238},[],"We created in-house tooling that allowed us to quickly instantiate new ETL pipelines, however, this introduced a new challenge to our system: How do we ensure that all of the end-of-day data is in Snowflake prior to running a reporting job?","97896ee0604a0",{"alt":14,"_key":240,"asset":241,"hotspot":14,"url":243,"width":244,"height":245,"extension":27,"_type":75,"children":14},"ecff4b4f4f7f",{"_ref":242,"_type":30},"image-2f128a956ab5ca00d0be9b0ff90deb25defd5648-757x595-png","https://cdn.sanity.io/images/40fnhjbe/production/2f128a956ab5ca00d0be9b0ff90deb25defd5648-757x595.png",757,595,{"markDefs":247,"children":248,"_type":49,"style":50,"_key":253},[],[249],{"_type":48,"marks":250,"text":251,"_key":252},[],"By leveraging Snowflake for our reporting tasks, we've seen a dramatic improvement: jobs that once took hours now completed in just minutes! This ETL approach allowed us to run on-the-fly transforms, which proved very beneficial when some of our Kafka topics occasionally contained incomplete data or required a small transformation before loading to Snowflake.","5494e5c92fda0","150afd0dad03",{"style":50,"_key":255,"markDefs":256,"children":257,"_type":49},"0be155880c7c",[],[258],{"_key":259,"_type":48,"marks":260,"text":261},"8743d6358b2d0",[],"Additionally, we adopted Argo Workflows as our workflow orchestrator, allowing us to easily define workloads in the form of a DAG (directed-acyclic-graph). We leveraged Argo Events, enabling us to define event-driven workflows. Because Kubernetes and Kafka are at the core of our engineering platform, Argo was a good fit for us.",{"style":50,"_key":263,"markDefs":264,"children":265,"_type":49},"a7f529104837",[],[266],{"_key":267,"_type":48,"marks":268,"text":132},"74e3329123dd",[59],{"markDefs":270,"children":271,"level":151,"_type":49,"style":50,"_key":276,"listItem":144},[],[272],{"marks":273,"text":274,"_key":275,"_type":48},[],"These pipelines were slow. Our Kafka topics were only single-partitioned and our pipelines were written in Python. Our validations ran at EOD, and if we detected any issues with the data that warranted a reprocessing, it quickly became a timing issue for all of our downstream EOD reporting because reprocessing a day's worth of data could take up to a few hours.","704d7b88af330","6a99dcd6da8e",{"level":151,"_type":49,"style":50,"_key":278,"listItem":144,"markDefs":279,"children":280},"4a2c1a5eaa73",[],[281],{"text":282,"_key":283,"_type":48,"marks":284},"Backfilling data took a long time. The need for backfilling data varies from instantiating a new pipeline that requires reading from the earliest offset, schema changes, recognizing bad transform logic, etc. However, backfilling could be a very expensive operation. As mentioned above, it could take multiple hours for a single day’s worth of data. If we apply this efficiency over several months, backfilling data could be finished in a matter of days.","a31a0e9848910",[],{"children":286,"level":151,"_type":49,"style":50,"_key":291,"listItem":144,"markDefs":292},[287],{"_type":48,"marks":288,"text":289,"_key":290},[],"Data observability was minimal. If you wanted to know how a row of data landed in a table, you had to look at the source code. This became especially cumbersome when business analysts started using data in Snowflake. We didn’t have a simple answer to data lineage.","bc74238c31ac","7472c9d8879a",[],{"listItem":144,"markDefs":294,"children":295,"level":151,"_type":49,"style":50,"_key":300},[],[296],{"text":297,"_key":298,"_type":48,"marks":299},"S3 file loading was synchronous. If one file took a long time to process, then this would delay all files downstream.","aed2f3366f8a",[],"4368544edf84",{"_key":302,"markDefs":303,"children":304,"_type":49,"style":60},"8287e032cb1c",[],[305],{"_type":48,"marks":306,"text":307,"_key":308},[59],"Current Iteration ","50cf9d3d23af",{"children":310,"_type":49,"style":50,"_key":315,"markDefs":316},[311],{"_type":48,"marks":312,"text":313,"_key":314},[],"We grew fast, and scaling our entire system became a focal point in engineering. As a result, we improved our data standards around Kafka and tightened our APIs. Our high-volume Kafka topics transitioned to multi-partitioned topics, allowing downstream consumers to scale horizontally.","be252d9b119a0","0e7ac48921f8",[],{"_type":49,"style":50,"_key":318,"markDefs":319,"children":320},"ef19cb8d954f",[],[321],{"_type":48,"marks":322,"text":323,"_key":324},[],"This is when we transitioned from an ETL (extract-transform-load) data-loading style to an ELT (extract-load-transform) style. We followed a data warehouse medallion architecture where data lives in multiple layers or “tiers.”","9ac6e81749130",{"extension":27,"alt":14,"height":326,"_key":327,"asset":328,"_type":75,"children":14,"hotspot":14,"url":330,"width":331},621,"301e662457f0",{"_ref":329,"_type":30},"image-7cf7271be8c70e04257f74b8ad75d8a11e5c156a-1524x621-png","https://cdn.sanity.io/images/40fnhjbe/production/7cf7271be8c70e04257f74b8ad75d8a11e5c156a-1524x621.png",1524,{"children":333,"_type":49,"style":50,"_key":338,"markDefs":339},[334],{"_type":48,"marks":335,"text":336,"_key":337},[],"In this ELT style, the bronze tier serves as a “raw” data layer, where data is untouched from the source. This tier is typically in AWS S3 and/or Snowflake. The silver tier is meant to represent cleansed and conformed data, and the gold layer is curated business-level tables. The gold tier is meant to act as public data, akin to an API, where data versioning is strongly enforced. When teams wish to access another team's data, they can do so via their gold layer. This allows for teams’ data encapsulation.\n\nWe provisioned per-team federated databases, meaning that each team was responsible for populating its bronze, silver, and gold data tiers and had some level of data engineering responsibilities. Pivoting to a medallion data warehouse architecture gave our pipelines a clear distinction between loaders and transformers.","770e531c53510","9b1b2382ce58",[],{"_key":341,"markDefs":342,"children":343,"_type":49,"style":50},"d8614b40cb9b",[],[344],{"_key":345,"_type":48,"marks":346,"text":347},"474eb3b867b9",[59],"Extract-Load",{"markDefs":349,"children":350,"_type":49,"style":50,"_key":355},[],[351],{"_type":48,"marks":352,"text":353,"_key":354},[],"Our loaders mainly consist of two technologies:","b5755f62f9620","7b818369c49d",{"children":357,"_type":49,"style":50,"_key":362,"markDefs":363},[358],{"_type":48,"marks":359,"text":360,"_key":361},[],"1) Kafka data loading via the Snowflake Kafka Connector. Our Kafka topics typically contain raw Protobuf data, and we store our Protobuf schemas in Buf Schema Registry (BSR). Because Kafka Connect doesn’t natively integrate BSR, we wrote our own plugin.","65ba973ec2f30","8c8227e3a54c",[],{"markDefs":365,"children":366,"_type":49,"style":50,"_key":371},[],[367],{"_type":48,"marks":368,"text":369,"_key":370},[],"","cc5b00309f250","3be351b1087d",{"markDefs":373,"children":374,"_type":49,"style":50,"_key":379},[],[375],{"_type":48,"marks":376,"text":377,"_key":378},[],"2) We wrote an in-house tool for S3 file loading, utilizing Argo Events to spawn a workflow per AWS SQS event. This task queue style of processing messages allows us to process many files in parallel.","30a837ed1ffa0","43a551298404",{"children":381,"_type":49,"style":50,"_key":385,"markDefs":386},[382],{"_key":383,"_type":48,"marks":384,"text":369},"a92dfe9f45ca0",[],"330a04a4ff4c",[],{"markDefs":388,"children":389,"_type":49,"style":50,"_key":394},[],[390],{"_type":48,"marks":391,"text":392,"_key":393},[],"Both loaders load to a “bronze” data tier, where the contents of the data are schemaless (a json blob). There are also additional metadata columns for each loader, for example the Snowflake Kafka Connector provides a record_metadata column providing Kafka message metadata (topic, partition, offset, time, etc). Our S3 file load tool provides metadata such as S3 key name, last modified timestamp, e-tag, etc.","0b736be40105","ee74a2a30f5f",{"_type":49,"style":50,"_key":396,"markDefs":397,"children":398},"9b8a1ddd0261",[],[399],{"_type":48,"marks":400,"text":401,"_key":402},[59],"Transform","9e4b12ee6558",{"markDefs":404,"children":405,"_type":49,"style":50,"_key":410},[],[406],{"marks":407,"text":408,"_key":409,"_type":48},[],"\nAfter data lands in the bronze layer, we need some methodology to transform this data to the gold tier. For this tool, we picked dbt. Ultimately this was a very easy pick for us due to the simplicity, versatility, and community of dbt. Additionally, adding dbt to our tech stack allowed our business analysts to construct their own data pipelines oftentimes without needing the support of an engineer. ","9c3d22028638","443a1b833b64",{"markDefs":412,"children":413,"_type":49,"style":60,"_key":418},[],[414],{"marks":415,"text":416,"_key":417,"_type":48},[59],"Deployment Strategy & Management ","a080f5c82b12","1bb869bc175a",{"children":420,"_type":49,"style":50,"_key":433,"markDefs":434},[421,425,429],{"_type":48,"marks":422,"text":423,"_key":424},[],"As mentioned previously, each engineering team requires some level of data engineering. What teams want to focus on in these pipelines is the ","99f0a4d9501f0",{"_type":48,"marks":426,"text":427,"_key":428},[59],"business logic","99f0a4d9501f1",{"_type":48,"marks":430,"text":431,"_key":432},[],", not the implementation details that are required for instantiating a date pipeline – e.g, idempotency, retries, backfill details, handling ad hoc runs, Kubernetes resource deploys, etc.","99f0a4d9501f2","806f95a089b8",[],{"_key":436,"markDefs":437,"children":438,"_type":49,"style":50},"9128041383da",[],[439],{"text":440,"_key":441,"_type":48,"marks":442},"Because of this, our data platform team has pivoted towards offering our existing tools as a Platform as a Service (PaaS). Examples:","d3d682954c280",[],{"markDefs":444,"children":445,"level":151,"_type":49,"style":50,"_key":458,"listItem":144},[],[446,450,454],{"_type":48,"marks":447,"text":448,"_key":449},[],"Kafka to Snowflake – teams instantiate Kafka connectors via populating a yaml file that describes which topic to sync to Snowflake, as well as the database, schema, and table name. ","86c768a619c70",{"_type":48,"marks":451,"text":452,"_key":453},[59],"No Kafka Connect knowledge is necessary","86c768a619c71",{"_type":48,"marks":455,"text":456,"_key":457},[],"!","86c768a619c72","14a1f6c964b3",{"_key":460,"listItem":144,"markDefs":461,"children":462,"level":151,"_type":49,"style":50},"2628429f9cb9",[],[463,467],{"_type":48,"marks":464,"text":465,"_key":466},[],"S3 to Snowflake – teams instantiate S3 to Snowflake pipelines by populating a yaml file that describes the S3 key regex to match on, and which Snowflake database, schema, and table to load to. ","63140844bddb",{"_type":48,"marks":468,"text":469,"_key":470},[59],"No code is necessary!","71932ffac1d71",{"level":151,"_type":49,"style":50,"_key":472,"listItem":144,"markDefs":473,"children":474},"738878bd129d",[],[475,479],{"_type":48,"marks":476,"text":477,"_key":478},[],"Managed dbt deployments – teams instantiate their dbt projects by populating a simple template that accepts any dbt runtime flags (select, target, full refresh, etc) as well as a cron schedule (and will soon support event-driven jobs) to run on. This ultimately gets deployed as Argo workflows, but ","2845bf88d25b",{"_type":48,"marks":480,"text":481,"_key":482},[59],"teams do not need to write any Argo Workflow logic!","be46aa22d4091",{"_key":484,"markDefs":485,"children":486,"_type":49,"style":50},"3dd7c9566c0c",[],[487],{"marks":488,"text":489,"_key":490,"_type":48},[],"Providing our tooling as a PaaS allows developers to focus on business logic and helps alleviate the engineering complexities of creating a pipeline. It also provides non-engineers with the ability to create end-to-end data pipelines.","da40571eed390",{"style":50,"_key":492,"markDefs":493,"children":494,"_type":49},"b32a9fc2ce73",[],[495],{"_type":48,"marks":496,"text":369,"_key":497},[],"0b49ab499d380",{"_key":499,"markDefs":500,"children":501,"_type":49,"style":50},"7085dec6a391",[],[502],{"_type":48,"marks":503,"text":504,"_key":505},[],"​​Clear Street’s evolution of our data platform from conception to its current state exemplifies our commitment to innovation and scalability within the industry. By navigating early challenges and leveraging different programming software to optimize reporting and data processing capabilities, we have prioritized data integration and created an environment where our engineers can amplify business impact.","ad41e548a2660",{"children":507,"_type":49,"style":50,"_key":521,"markDefs":522},[508,512,517],{"_key":509,"_type":48,"marks":510,"text":511},"5cc53bfae6690",[],"If our engineering journey has piqued your interest, visit our ",{"_type":48,"marks":513,"text":515,"_key":516},[514],"5d1619de0d51","careers page","acbb793062c1",{"marks":518,"text":519,"_key":520,"_type":48},[]," to learn more about our open roles.","7b0d6b357235","c2697e8622e8",[523],{"_type":524,"href":525,"_key":514,"to":526},"internalLink",false,"/careers",{"height":528,"alt":14,"hotspot":14,"url":529,"_type":75,"_key":530,"asset":531,"extension":27,"width":533,"children":14},729,"https://cdn.sanity.io/images/40fnhjbe/production/e24c19e72a85a15213a62da71120b256f96f0769-1321x729.png","070e6aca0d6d",{"_ref":532,"_type":30},"image-e24c19e72a85a15213a62da71120b256f96f0769-1321x729-png",1321,[535,543],{"children":536,"_type":49,"style":50,"_key":541,"markDefs":542},[537],{"marks":538,"text":539,"_key":540,"_type":48},[59],"About Clear Street:","820e76cb468a0","01d9743bd6e6",[],{"style":50,"_key":544,"markDefs":545,"children":550,"_type":49},"6558fb161935",[546],{"_type":547,"href":548,"_key":549},"link","https://clearstreet.io","f69e401d33e9",[551,555,558],{"_type":48,"marks":552,"text":553,"_key":554},[],"Clear Street is modernizing the brokerage ecosystem with financial technology and services that empower market participants with real-time data and best-in-class products, tools and teams, to navigate capital markets around the world. Complemented by white-glove service, Clear Street's cloud-native, proprietary product suite delivers financing, derivatives, execution and more to power client success, adding efficiency to the market and enabling clients to minimize risk, redundancy and cost. Clear Street’s goal is to create a single platform for every asset class, in every country and in any currency. For more information, visit ","46cc6bc340df0",{"marks":556,"text":548,"_key":557,"_type":48},[549],"46cc6bc340df1",{"_type":48,"marks":559,"text":560,"_key":561},[],".","46cc6bc340df2",[563,593],{"children":564,"_type":49,"style":50,"_key":587,"markDefs":588},[565,569,574,578,583],{"_type":48,"marks":566,"text":567,"_key":568},[],"Clear Street does not provide investment, legal, regulatory, tax, or compliance advice. Consult professionals in these fields to address your specific circumstances. These materials are: (i) solely an overview of Clear Street’s products and services; (ii) provided for informational purposes only; and (iii) subject to change without notice or obligation to replace any information contained therein.\n\nProducts and services are offered by Clear Street LLC as a Broker Dealer member FINRA and SIPC and a Futures Commission Merchant registered with the CFTC and member of NFA. Additional information about Clear Street is available on FINRA ","e217f565c4110",{"_key":570,"_type":48,"marks":571,"text":573},"e217f565c4111",[572],"10659f16c05f","BrokerCheck",{"_type":48,"marks":575,"text":576,"_key":577},[],", including its Customer Relationship Summary and NFA ","e217f565c4112",{"marks":579,"text":581,"_key":582,"_type":48},[580],"3c111ef5e988","BASIC | NFA (futures.org)","e217f565c4113",{"_type":48,"marks":584,"text":585,"_key":586},[],".\n‍\nCopyright © 2024 Clear Street LLC. All rights reserved. Clear Street and the Shield Logo are Registered Trademarks of Clear Street LLC\n","e217f565c4114","cd3115128082",[589,591],{"_type":547,"href":590,"_key":572},"https://brokercheck.finra.org/firm/summary/288933",{"href":592,"_key":580,"_type":547},"https://www.nfa.futures.org/BasicNet/basic-profile.aspx?nfaid=XCoGScQYyvw%3D",{"children":594,"_type":49,"style":50,"_key":599,"markDefs":600},[595],{"_type":48,"marks":596,"text":597,"_key":598},[],"\n","a19adde9170f0","38805a72b34d",[],{"title":602,"slug":603,"fields":604},"Contact","contact",[605,611,616,621,625],{"_type":606,"name":607,"label":608,"required":609,"errorMessage":610},"field.string","full-name","Full name",true,"Please add your full name",{"errorMessage":612,"_type":613,"name":614,"label":615,"required":609},"Invalid email","field.email","work-email","Work email",{"errorMessage":617,"_type":618,"name":619,"label":620,"required":609},"Please add your work phone","field.phone","work-phone","Work phone",{"label":622,"required":609,"errorMessage":623,"_type":606,"name":624},"Company","Please add your company","company",{"errorMessage":14,"_type":626,"name":627,"label":628,"required":525},"field.text","message","Message (optional)","blog",12,{"address":632,"disclaimer":633,"footerItems":660,"legalItems":692,"legalText":14,"socialNetworks":702},"4 World Trade Center\n150 Greenwich St Floor 45\nNew York, NY 10007\n(646) 845-0036",[634,644],{"markDefs":635,"children":638,"_type":49,"style":50,"_key":643},[636],{"_type":547,"href":590,"_key":637},"d38625939708",[639],{"_type":48,"marks":640,"text":641,"_key":642},[],"Products and services are offered by Clear Street LLC as a Broker Dealer member FINRA and SIPC and a Futures Commission Merchant registered with the CFTC and member of NFA. ","331699fdb6140","b41b74ae73bb",{"style":50,"_key":645,"markDefs":646,"children":648,"_type":49},"dbec5081eda7",[647],{"_type":547,"href":590,"_key":637},[649,653,656],{"text":650,"_key":651,"_type":48,"marks":652},"Additional information about Clear Street is available on FINRA ","42e587e4d749",[],{"marks":654,"text":573,"_key":655,"_type":48},[637],"4894062c01ca",{"text":657,"_key":658,"_type":48,"marks":659},", including its Customer Relationship Summary and NFA BASIC | NFA (futures.org).","6db9006e1b4a",[],[661,674,686],{"title":622,"pages":662},[663,667,670,673],{"type":664,"title":665,"slug":666},"internal","About","about",{"type":664,"title":668,"slug":669},"News & Content","news",{"type":664,"title":671,"slug":672},"Careers","careers",{"type":664,"title":602,"slug":603},{"title":675,"pages":676},"Services",[677,680,683],{"type":664,"title":678,"slug":679},"Institutional","institutional",{"type":664,"title":681,"slug":682},"Professional Clearing","professional-clearing",{"type":664,"title":684,"slug":685},"Active Trader","active-trader",{"title":687,"pages":688},"Products",[689],{"type":664,"title":690,"slug":691},"Studio","studio",[693,696,699],{"title":694,"slug":695},"Regulatory Disclosures","regulatory-disclosures",{"title":697,"slug":698},"Privacy Policy","privacy-policy",{"title":700,"slug":701},"Security","security",[703,708,712,716],{"_type":704,"link":705,"socialNetwork":706,"_key":707},"links","https://github.com/clear-street","github","466192507eea",{"_type":704,"link":709,"socialNetwork":710,"_key":711},"https://www.linkedin.com/company/clear-street","linkedin","43f9fa8f49d0",{"_type":704,"link":713,"socialNetwork":714,"_key":715},"https://www.youtube.com/@ClearStreetNYC","youtube","b581a744d770",{"_type":704,"link":717,"socialNetwork":718,"_key":719},"https://open.spotify.com/show/3Bbl6x17ZSdnijTTDq6tKi","spotify","7625c0ffc2b2",1737639516013]